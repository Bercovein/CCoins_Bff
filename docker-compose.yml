version: '3.5'
services:

  ccoins-mysql:
    container_name: ccoins-mysql
    image: mysql:8.0.33
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_INIT_OPTIONS: ${MYSQL_INIT_OPTIONS}
      MYSQL_PORT: ${MYSQL_PORT}
    healthcheck:
      test: "/usr/bin/mysql --user=$$MYSQL_USER --password=$$MYSQL_PASSWORD --execute \"SHOW DATABASES;\""
      start_period: 5s
      interval: 5s
      timeout: 10s
      retries: 2
    #command: --lower_case_table_names=0
    command: [--default-authentication-plugin=mysql_native_password,--explicit_defaults_for_timestamp]
    
    cap_add:
      - SYS_NICE
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    # Establecer permisos del volumen de datos de MySQL
      - ./data:/var/lib/mysql:rw,z
    ports:
      - 3306:3306
    networks:
      - internal-network

  users-backend:
    container_name: ccoins-users
    build:
      context: ../CCoins_Users
      dockerfile: Dockerfile
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
    ports:
      - 8084:8084
    networks:
      - internal-network

  bars-backend:
    container_name: ccoins-bars
    build:
      context: ../CCoins_Bars
      dockerfile: Dockerfile
    environment:
      - MYSQL_HOST=ccoins-mysql
      - MYSQL_PORT=3306
    ports:
      - 8082:8082
    networks:
      - internal-network

  prizes-backend:
    container_name: ccoins-prizes
    build:
      context: ../CCoins_Prizes
      dockerfile: Dockerfile
    environment:
      - MYSQL_HOST=ccoins-mysql
      - MYSQL_PORT=3306
    depends_on:
      - ccoins-mysql
    ports:
      - 8083:8083
    networks:
      - internal-network

  coins-backend:
    container_name: ccoins-coins
    build:
      context: ../CCoins_Coins
      dockerfile: Dockerfile
    environment:
      - MYSQL_HOST=ccoins-mysql
      - MYSQL_PORT=3306
    depends_on:
      - ccoins-mysql
    ports:
      - 8081:8081
    networks:
      - internal-network

  bff-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ccoins-bff
    environment:
      COINS_HOST: ${COINS_HOST}
      BARS_HOST: ${BARS_HOST}
      PRIZES_HOST: ${PRIZES_HOST}
      USERS_HOST: ${USERS_HOST}
      FRONT_HOST: ${FRONT_HOST}
    volumes:
      - ./images:/app/images
      - ./files:/app/files
      - ./src/main/resources/ireport:/app/ireport
      - ./temp:/app/temp
    env_file:
      - ./.env
    depends_on:
      - users-backend
      - bars-backend
      - prizes-backend
      - coins-backend
    ports:
      - 8000:8000
    networks:
      - internal-network

  angular-frontend:
    build:
      context: ../CCoins
      dockerfile: Dockerfile
    container_name: ccoins-angular
    depends_on:
      - bff-backend
    ports:
      - 4200:4200
    networks:
      - internal-network
    volumes:
      - ../CCoins:/app
    command: bash -c "npm install --loglevel verbose && ng serve --configuration=local --port 4200 --host 0.0.0.0 --open --poll"

  phpmyadmin:
    container_name: ccoins-phpmyadmin
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_HOST=ccoins-mysql
      - MYSQL_ROOT_PASSWORD=password
    ports:
      - "8090:80"
    networks:
      - internal-network
      
networks: 
  internal-network:
    name: ccoins-network

volumes:
  data: {}